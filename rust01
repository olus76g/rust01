
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>

int	loop(int **p);

int rust01()
{
	char	j;
	int	i;
	int	**num;
	int	set_num;

	i = 0;
	j = 0;
	set_num = 4;
	num = (int **) malloc(set_num * sizeof(int *));
	while(i < set_num)
	{
	num[i] = (int *) malloc(set_num * sizeof(int));
	i++;
	}
	i = 0;
	while(i < set_num)
	{
		while(j < set_num)
		{
		num[i][j] = 0;
		j++;
		}
	j = 0;
	i++;
	}
	//try(num[1][2]);
	loop(num);
	free(num);
	//value_possible(num[0][0]);
}

int	loop(int **p)
{	
	int	i;
	int	j;
	int	k;

	i = 0;
	j = 0;
	k = 1;
	while(i < 4)
	{
		p[i][j] = k;
		//possible(i, j);
		if(j==3)
		{
		j = 0;
		i++;
		}
		k++;
		j++;
	}
	printf("%d",p[0][1]);
}

// int possible(int y, int x)
// {

// 	int	
// }


int	main()
{
	rust01();
}
